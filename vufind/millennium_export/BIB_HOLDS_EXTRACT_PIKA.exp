#!/usr/bin/expect

# BIB_HOLDS_EXTRACT_PIKA.exp
# James Staub
# Nashville Public Library

# 20150218 : JAMES decides to scrap scheduler altogether to support Pika continuous reindexing
# This script is intended to be run once a day in preparation for a full index job
# The holds extract helps calculate popularity by determining the length of the holds queue
# JAMES has not verified that it works as expected in Pika
# + initiate Create List in lieu of waiting on Millennium Scheduler
# + JAMES renamed from VUFIND to PIKA

# 20140501
# Millennium 2011 1.6_3
# Millennium Scheduler cannot FTP files following the unfortunate update to 2011 1.6
# This script is our workaround
# NB: Millennium Scheduler still creates the Review File, and this script
# must be timed in cron to correspond with the appropriate times Millennium
# Scheduler completes a task
# 

set name "BIB_HOLDS_EXTRACT_PIKA"
set newFileName "${name}.TXT"
set env(TERM) xterm
set wait "2" ; # timeout

if {$argc != 2} {
        puts "Please provide a Pika site URL and a Millennium server/INNOPAC URL, e.g., $ expect BIB_HOLDS_EXTRACT_PIKA.exp catalog.library.nashville.org waldo.library.nashville.org"
        exit
}
set site [lindex $argv 0]
set host [lindex $argv 1]
set confpwd "/usr/local/VuFind-Plus/sites/$site/conf/config.pwd.ini"
if {[file exists $confpwd] != 1} {
        puts "Please check spelling of site $site; config.pwd.ini not found at $confpwd"
        exit
}
set localPath "/data/vufind-plus/$site/marc/"
if {[file exists $localPath] != 1} {
        puts "Please check spelling of site $site; /marc/ directory not found at $localPath"
        exit
}

set fd [open $confpwd r]
while {![eof $fd]} {
        set line [string trim [gets $fd] " "]
        if {$line == ""} continue
        switch -regexp -nocase -- $line {
                "^\\[Catalog Extract\\]" {
                        set section true
                }
                "^\\[" {
                        set section false
                }
                ^(INNOPAC|os) {
                        if {$section == true} {
                                set pair [split $line =]
                                set variable [string trim [lindex $pair 0]]
                                set value [string trim [lindex $pair 1]]
                                set $variable $value
                                # puts "$variable  = $value"
                        }
                }
                default {}
        }
}

spawn ssh $INNOPACuser@$host
#expect "Are you sure you want to continue connecting (yes/no)?" ; # if RSA key for host is not yet set
#send "yes\r"
#expect "login as:"
#send "$INNOPACuser\r"
expect "Password:"
send "$INNOPACuserPassword\r"
expect "What kind of Terminal are you using?"
send "v"
expect "Please confirm: are you using a VT100 or compatible terminal?"
send "y"
expect "M > MANAGEMENT information"
send "M"
expect "L > Create LISTS of records"
send "L"
expect "Please key your initials :"
send "$INNOPACinitials\r"
expect "Please key your password :"
send "$INNOPACinitialsPassword\r"
expect "Select review file to work on :"
expect "$INNOPACreviewFile > "
send $INNOPACreviewFile
expect "N > NEW BOOLEAN search, delete the review file"
send "N"
expect "Are you sure you want to delete the current review file?"
send "Y"
expect "B > BIBLIOGRAPHIC list"
send "B"
expect "8 HOLD:"
send "/8"
expect "Enter boolean condition (e(xists, n(ot exist)"
send "e"
expect "Enter action ( A for AND, O for OR, S to START search )"
send "S"
expect "What name would you like to give this file of records?"
send "$name\r"
set timeout -1
expect "BOOLEAN SEARCH COMPLETE"
set timeout $wait
send " "

# CREATE EXPORT FILE
expect "U > Output USER-selected format"
send "U"
expect "C > CREATE a new file for output"
send "C"
expect "Output Item #1"
send "09" ; # BIB RECORD NUMBER
expect "Output Item #2"
send "/8" ; # HOLDS
expect "Output Item #3"
send "\r"
expect "1 > Field Delimiter"
send "1"
expect "1 > Control character"
send "1"
expect "Decimal value  (0-127)"
send "9\r"
expect "Choose one (1-4,C,Q)"
send "2" ; # Text qualifier
expect "3 > None"
send "3"
expect "3 > Repeated Field Delimiter"
send "3"
expect "2 > ASCII character"
send "2"
expect "ASCII character"
send "|"
expect "C > CREATE a new file for output"
send "C"
expect "File name:"
send "$name\r"
expect "File $name.out already exists!  Overwrite it? (y/n)"
send "y"
expect "Output the file now? (y/n)"
send "n"
close

# RETRIEVE THE FILE FROM MILLENNIUM SERVER
spawn scp $osUser@$host:$osPath/$name.out $localPath$newFileName
set timeout -1
expect "Password"
send "$osUserPassword\r"
expect "100%"
sleep 1 
close

exit 0
