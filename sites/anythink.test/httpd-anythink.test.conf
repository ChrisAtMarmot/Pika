<VirtualHost *:80>
  ServerName anythink.marmot.org
    # Test instance on Marmot server
  
    #ServerName catalog-new.anythinklibraries.org
    # anythink server instance
    #ServerName 50.200.218.205
    #ServerName 10.1.1.66
    #ServerName catalogue2.anythink.org
    #ServerName anythink.test
    #ServerName anythink.localhost
    #ServerAlias *.anythink.org
    #ServerAlias *.anythink.localhost
  
    DocumentRoot "/usr/local/vufind-plus/vufind/web"
    #CustomLog /var/log/vufind-plus/anythink/access.log combined
    #ErrorLog /var/log/vufind-plus/anythink/error.log
  
    CustomLog /var/log/vufind-plus/anythink.test/access.log
    ErrorLog /var/log/vufind-plus/anythink.test/error.log
    #marmot test instance
  
    <Directory "/usr/local/vufind-plus/vufind/web">
      Order allow,deny
      allow from all
      AllowOverride All

      # Uncomment the following lines, if you wish to use the Shibboleth authentication
      # AuthType shibboleth
      # require shibboleth

      # Friendly URLs
      #
      # You may need to adjust the RewriteBase to match your VuFind path.
      # You can remove the line if your vufind instance will be located at the web
      # server root.
      #
      <IfModule mod_rewrite.c>
        RewriteEngine   On
    
        RewriteRule  ^robots\.txt$ /robots.php [NC,L]

        #Redirect anything still using /vufind to /
        RewriteCond %{THE_REQUEST} ^GET\ /vufind/
        RewriteRule ^vufind/(.*) /$1 [L,R=301]

        RewriteCond %{THE_REQUEST} ^GET\ /MyResearch/
    
        RewriteRule ^MyResearch/OverdriveHolds /MyAccount/Holds$1 [L,QSA,R=301]
        RewriteRule ^MyResearch/OverdriveCheckedOut /MyAccount/CheckedOut$1 [L,QSA,R=301]
        RewriteRule ^MyResearch/EContentHolds /MyAccount/Holds$1 [L,QSA,R=301]
        RewriteRule ^MyResearch/EContentCheckedOut /MyAccount/CheckedOut$1 [L,QSA,R=301]
        #included 12-8-2014, plb. taken from httpd.opac.marmot.org.conf
        RewriteRule ^MyResearch/(.*) /MyAccount/$1 [L,R=301]

    
        # Note: The following RewriteRule directives include the [B] flag to escape
        # backreferences.  This prevents encoding problems caused by special characters
        # like & if they show up in ids.  Note that the flag doesn't work in some
        # versions of Apache prior to 2.2.12; if you run into trouble, try upgrading.
        RewriteRule   ^(MyResearch)/([^/]+)/(.+)$   index.php?module=$1&action=$2&id=$3   [B,L,QSA]
        RewriteRule   ^(Record)/([^/]+)/(.+)$       index.php?module=$1&id=$2&action=$3   [B,L,QSA]
        RewriteRule   ^(Record)/(.+)$               index.php?module=$1&id=$2             [B,L,QSA]
        RewriteRule   ^([^/]+)/(.+)$                index.php?module=$1&action=$2         [B,L,QSA]
        RewriteRule   ^(Search)/?$                  index.php?module=$1                   [B,L,QSA]
        # above taken from httpd.opac.marmot.org.conf, below is the orignal set. plb 12-08-2014
    
        #RewriteRule   ^(MyAccount)/([^/]+)/(.+)$   index.php?module=$1&action=$2&id=$3   [B,L,QSA]
        #RewriteRule   ^(Record|EcontentRecord)/([^/]+)/(.+)$       index.php?module=$1&id=$2&action=$3   [B,L,QSA]
        #RewriteRule   ^(Record|EcontentRecord)/(.+)$               index.php?module=$1&id=$2             [B,L,QSA]
        #RewriteRule   ^(Search)/?$                  index.php?module=$1                   [B,L,QSA]

        ##RewriteCond   %{REQUEST_URI}    !^/?themes
        #RewriteRule   ^([^/]+)/(.+)$                index.php?module=$1&action=$2         [B,L,QSA]
        #This rewrites everything else to the index so we can display a 404
        RewriteRule   ^([^/]+)$                     index.php?module=404         [B,L,QSA]
      </IfModule>

      # Disable Magic Quotes
      php_value magic_quotes_gpc false

      ## Session Settings
      #php_value session.use_cookies  1
      #php_value session.use_only_cookies 1
      ## important: we want to serialize objects
      #php_value session.auto_start 0
      ##php_value session.cookie_secure 1
      ## we should check session lifetime in "read" methods
      ## since PHP cookies do not "refresh" them during activity
      ## hence we leave them alive until browser closes
      #php_value session.cookie_lifetime  0
      #php_value session.gc_maxlifetime 6000

      ### Uncomment these lines if you wish to show all errors on the screen.
      ##php_value display_errors 1
      ##php_value error_reporting 2047
    # no php settings set in other configs. plb 12-08-2014

      # enable expirations
      <IfModule mod_expires.c>
        ExpiresActive On
        ExpiresByType image/gif "access plus 1 month"
        ExpiresByType image/png "access plus 1 month"
        ExpiresByType image/jpg "access plus 1 month"
        ExpiresByType image/jpeg "access plus 1 month"
        ExpiresByType image/x-icon "access plus 1 month"
        ExpiresByType text/css "access plus 4 hours"
        ExpiresByType application/javascript "access plus 4 hours"
      </IfModule>
        
      #Enable deflating (gzip) of content
      <IfModule mod_deflate.c>
        # Insert filter
        SetOutputFilter DEFLATE
        
        # Netscape 4.x has some problems...
        BrowserMatch ^Mozilla/4 gzip-only-text/html
        
        # Netscape 4.06-4.08 have some more problems
        BrowserMatch ^Mozilla/4\.0[678] no-gzip
        
        # MSIE masquerades as Netscape, but it is fine
        # BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
        
        # NOTE: Due to a bug in mod_setenvif up to Apache 2.0.48
        # the above regex won't work. You can use the following
        # workaround to get the desired effect:
        BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html
        
        # Don't compress images
        SetEnvIfNoCase Request_URI \
        \.(?:gif|jpe?g|png)$ no-gzip dont-vary
      </IfModule>
    </Directory>
</VirtualHost>
