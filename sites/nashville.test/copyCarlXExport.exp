#!/usr/bin/expect -f
#
# copyCarlXExport.exp
#

#https://marmot.myjetbrains.com/youtrack/issue/IN-384

exp_internal 0 ; # 1 = verbose debugging to stdout
log_user 1 ; # 1 = send screens to stdout

set site [lindex $argv 0]
set confpwd "/usr/local/VuFind-Plus/sites/$site/conf/config.pwd.ini"
if {[file exists $confpwd] != 1} {
        puts "Please check spelling of site $site; config.pwd.ini not found at $confpwd"
        exit
}
set localPath "/data/pika/$site/marc"
if {[file exists $localPath] != 1} {
        puts "Please check spelling of site $site; /marc/ directory not found at $localPath"
        exit
}

# READ CONFIG.PWD.INI
set fd [open $confpwd r]
while {![eof $fd]} {
        set line [string trim [gets $fd] " "]
        if {$line == ""} continue
        switch -regexp -nocase -- $line {
                "^\\[Catalog Extract\\]" {
                        set section true
                }
                "^\\[" {
                        set section false
                }
                ^(FTP) {
                        if {$section == true} {
                                set pair [split $line =]
                                set variable [string trim [lindex $pair 0]]
                                set value [string trim [lindex $pair 1]]
                                set $variable $value
                                # puts "$variable  = $value"
                        }
                }
                default {}
        }
}

set prompt {sftp> $}
set size1 0
set size2 1
spawn sftp $FTPUser@$FTPHost:/carl.output/
expect "$FTPUser@$FTPHost\'s password:*"
send "$FTPPassword\r"
expect $prompt

while {$size1 != $size2} {
	send "ls -l fullExport.gz\r"
	#result should look like
	#ls: cannot access fullExport.gz: No such file or directory
	# OR
	#ls -l fullExport.gz\r\n-rw-r--r--    1 appmgr      dba      304939812 Jun 22 22:10 fullExport.gz\r\nsftp>

	expect {
		"No such file or directory" {
			sleep 10
			continue
		}

		-re "fullExport\.gz\[^ ]+ +\[^ ]+ +\[^ ]+ +\[^ ]+ +\(\[^ ]+) +(\[^ ]+) (\[0-9]+) .+fullExport\.gz" {

#			# Compare date NOW against file mtime date # COMMENTED OUT 20170623 - date check during full_update.sh
#			#puts "MTIME: $expect_out(2,string) $expect_out(3,string)"
#			#puts "NOW: [clock format [clock seconds] -format {%b %d}]"
#			if {[clock format [clock seconds] -format {%b %d}] ne "$expect_out(2,string) $expect_out(3,string)"} {
#				sleep 10
#				continue
#			}
			
			# Deterimine whether file is growing
			set size2 $expect_out(1,string)
			#puts "\n\nSIZE1: $size1\n\n"
			#puts "\n\nSIZE2: $size2\n\n"
			if {$size1 == $size2} {break}
			set size1 $size2
			set size2 0
			sleep 10
		}
	}
}
expect $prompt
send "get fullExport.gz $localPath\r"
set timeout 5000
expect "100%*"
expect $prompt
close

spawn gunzip -fN $localPath/fullExport.gz
expect eof

spawn mv -f $localPath/fullExport $localPath/fullExport.mrc
expect eof

#
#--eof--
